name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 mypy black isort pylint

    - name: Check code formatting with black
      run: black --check --diff tagger setup.py

    - name: Check import sorting with isort
      run: isort --check-only --diff tagger setup.py

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 tagger setup.py --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 tagger setup.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Lint with pylint
      run: pylint --rcfile=/dev/null --disable=all --enable=E,F tagger setup.py
      continue-on-error: true

    - name: Type check with mypy
      run: mypy --ignore-missing-imports tagger setup.py
      continue-on-error: true

    - name: Run syntax check
      run: python -m py_compile tagger/*.py setup.py

    - name: Test import
      run: python -c "import sys; sys.path.insert(0, '.'); from tagger import cli"
      continue-on-error: true

  all-checks-passed:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: always()
    steps:
      - name: Check if all jobs passed
        run: |
          if [[ "${{ needs.lint-and-test.result }}" != "success" ]]; then
            echo "Required checks failed"
            exit 1
          fi
          echo "All required checks passed"
